{
  "id": "286",
  "title": "从一段代码剖释PHP foreach做了什么",
  "keywords": [
    "php",
    "foreach",
    "unset"
  ],
  "content": "## 从一段代码剖释PHP foreach做了什么\n当我们使用 foreach 的时候，php到底在做什么？我们看一段代码\n\n```javascript\n$arr = [ 1 , 2 , 3 ];\n\nforeach($arr as $key =&gt; &amp;$value){\n\t$value *= 2;\n}\n// [2,4,6]\n\nforeach($arr as $key =&gt; $value){\n\techo $value;\n}\n// 2,4,4   why ?\n```\n\n为什么不是输出 2 , 4 , 6  ? 要解决这个谜题，我们需要搞清楚foreach到底做了什么。\n以下均为伪代码：\n\n```javascript\nforeach($arr as $key =&gt; &amp;$value){\n\t/* \n\t1.首先 php 会内部执行  \n\t$key = key($arr);\n\t$value =  &amp; current($arr); \n\t注，因为上面代码使用 &amp;$value 所以此处也是引用\n\t*/\n\t$value *= 2;\n}\n//第一部分没有问题，正如你理解一样\n//但是重点来了，这个时候 $value 仍然是 $arr 最后一个元素的引用\n\nforeach($arr as $key = $value){\n\t/* \n\t1.首先 php 会内部执行  \n\t$key = key($arr);\n\t$value =  current($arr); \n\t注，结合上面的情况，第一循环相当于\n\t( $arr[2] = $arr[0] )\n\t所以第一循环以后，数组变成 2 , 4 , 2 ;想想为什么？\n\t同理，第二循环相当于 $arr[2] = $arr[1],\n\t数组变成 2 , 4 , 4\n\t第二循环相当于 $arr[2] = $arr[2],\n\t数组还是 2 , 4 , 4\n\t*/\n}\n```\n\n疑难得解，那么怎么解决？\n\n方法一，不用引用\n\n```javascript\nforeach($arr as $key =&gt; $value){\n\t$arr[$key] = $value * 2;\n}\n```\n\n方法二，unset引用变量\n\n```javascript\nforeach($arr as $key =&gt; &amp;$value){\n\t$value *= 2;\n}\nunset($value);\n```\n",
  "createdAt": 1461308820,
  "modified": 1461315325,
  "desc": "当我们使用 foreach 的时候，php到底在做什么？我们看一段代码"
}